Міністерство освіти і науки України
Харківський національний університет радіоелектроніки

Кафедра програмної інженерії







Звіт
З лабораторної роботи №4
З дисципліни «Аналіз та рефакторинг коду» на тему: «РОЗРОБКА IoT КЛІЄНТА»







Виконав
ст. гр. ПЗПІ-22-7
Дудуков Олександр Сергійович	                                           Перевірив ст.
викладач каф. 
ПІ Сокорчук І. П.
	







1 МЕТА РОБОТИ 


Розробити клієнт IoT, який здійснює збір, аналіз і передачу даних на сервер відповідно до принципів Інтернету речей. Реалізувати бізнес-логіку, функціонал налаштування пристрою та забезпечити інтеграцію з іншими компонентами системи.

ХІД РОБОТИ

В ході виконання лабораторної роботи було реалізовано IoT-систему моніторингу умов робочого середовища на базі мікроконтролера ESP32, що включає кілька ключових інженерних рішень для забезпечення ефективності та стабільної роботи пристрою:
•	Розроблено програмний код для взаємодії з датчиками температури, вологості та CO₂, який забезпечує зчитування цих параметрів та передачу даних на сервер MQTT для віддаленого моніторингу.
•	Використано модуль Wi-Fi ESP32 для підключення до мережі та передачі даних на віддалений сервер у форматі JSON.
•	Реалізовано обробку даних з датчиків DS18B20 (температура) та BME280 (CO₂, вологість), що дозволяє отримувати точні показники стану середовища.
•	Забезпечено передачу даних на MQTT сервер, що дозволяє здійснювати моніторинг умов середовища в реальному часі з будь-якого віддаленого клієнта.
•	Тестування пристрою було виконано через серійний монітор для перевірки з'єднання з мережею Wi-Fi та коректності роботи з сервером MQTT.
Текстовий опис інженерних рішень
Програмний код IoT-пристрою реалізовано за допомогою Arduino IDE з використанням наступних бібліотек:
•	WiFi.h для підключення до Wi-Fi мережі.
•	PubSubClient.h для передачі даних через MQTT.
•	DallasTemperature.h та OneWire.h для роботи з температурним датчиком DS18B20.
•	Adafruit_Sensor.h та Adafruit_BME280.h для роботи з датчиком BME280, який вимірює вологість і рівень CO₂.
Основні етапи виконання роботи:
1.	Підключення до Wi-Fi мережі: Автоматичне встановлення з'єднання з заданою мережею.
2.	Зчитування та обробка даних сенсорів: Збір даних про температуру, вологість і рівень CO₂.
3.	Передача даних на MQTT сервер: Публікація зібраних даних у форматі JSON на сервер для віддаленого моніторингу.
4.	Логування: Виведення діагностичної інформації через серійний монітор для перевірки працездатності системи.

 
Рисунок 2.1 – Схема IoT пристрою

2.2 Фрагменти програмного коду
2.2.1 Бізнес-логіка IoT-клієнта
Фрагмент коду зчитування даних сенсорів:
Код наведено у додатку А.

Фрагмент коду підключення до Wi-Fi:
1. void setup() {
2.   Serial.begin(115200);
3.   WiFi.begin(ssid, password);
4.   
5.   while (WiFi.status() != WL_CONNECTED) {
6.     Serial.println("Connecting to WiFi...");
7.   }
8.   Serial.println("Connected to WiFi");
9. 
10.   client.setServer(mqtt_server, mqtt_port);
11.   sensors.begin();
12. }

2.3	 UML Діаграми



 
Рисунок 2.3.1 – UML діаграма прецедентів IoT  клієнта 







 
Рисунок 2.3.2– UML діаграма діяльності IoT клієнта

Діаграма діяльності відображає повний процес роботи IoT-клієнта, починаючи з підключення до Wi-Fi мережі. У разі успішного підключення клієнт ініціює збір даних від сенсорів, які надають інформацію про температуру, вологість і рівень CO₂. Якщо підключення до Wi-Fi не вдалося, IoT-клієнт намагається перепідключитися.
Після отримання даних від сенсорів система обробляє інформацію для аналізу. Якщо рівень CO₂ перевищує безпечний поріг, система надсилає сповіщення користувачам і адміністраторам. У разі, якщо всі дані в межах норми, процес триває без сповіщень.
Далі зібрані дані зберігаються в базі даних, що забезпечує їх доступність для подальшого перегляду. Користувачі можуть отримати доступ до цієї інформації через мобільний або веб-інтерфейс, де представлені як поточні дані, так і історичні тренди.


3 ВИСНОВКИ

У ході виконання лабораторної роботи було успішно розроблено IoT-клієнт для моніторингу умов робочого середовища, який відповідає сучасним вимогам до розумних пристроїв та IoT-систем. Реалізовано ефективний збір, обробку та передачу даних із сенсорів для вимірювання температури, вологості та рівня CO₂. Завдяки інтеграції клієнта з MQTT-брокером, забезпечено можливість використання цього пристрою в масштабних системах для моніторингу умов у корпоративних приміщеннях. Це підтверджує практичну цінність розробленого IoT-клієнта для покращення безпеки та комфорту робочого середовища.


