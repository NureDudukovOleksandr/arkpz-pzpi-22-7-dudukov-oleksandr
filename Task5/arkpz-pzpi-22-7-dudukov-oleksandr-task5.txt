
Міністерство освіти і науки України
Харківський національний університет радіоелектроніки

Кафедра програмної інженерії


Звіт
З лабораторної роботи №5
З дисципліни «Аналіз та рефакторинг коду»
на тему: «РОЗГОРТАННЯ ПРОГРАМНОЇ СИСТЕМИ ТА ДЕМОНСТРАЦІЯ ЇЇ РОБОТИ»



Виконавець:
ст. гр. ПЗПІ-22-7	Дудуков О. С.

Перевірив:
ст. викладач кафедри ПІ	Сокорчук І. П.











Харків 2024

1 Мета роботи

Розгорнути реалізовану програмну систему, перевірити та налаштувати роботу розгорнутої програмної системи.

2 Хід роботи

2.1 Опис розгорнутої програмної системи
Серверна частина:
•	Мова програмування: Серверна частина програми розроблена на мові програмування JavaScript.
•	Фреймворк: Використано Node.js разом із Express.js, що забезпечує ефективну розробку веб-додатків і REST API.
•	База даних: MongoDB використовується для зберігання даних про умови робочого середовища. Для роботи з базою даних застосовується бібліотека Mongoose, яка дозволяє створювати схеми та взаємодіяти з MongoDB.
•	Контролери та маршрутизація: Реалізовано обробку HTTP-запитів для роботи з основними ресурсами системи (GET, POST, PUT, DELETE).
•	Міграції та оновлення: Впроваджено скрипти для ініціалізації бази даних і наповнення її початковими даними.
Функціональність: Система забезпечує моніторинг умов робочого середовища в корпоративних приміщеннях (лабораторіях, офісах, полігонах). Дані, що збираються із сенсорів (температура, вологість, рівень CO₂), аналізуються для визначення комфорту та безпеки. Реалізовано сповіщення користувачів про важливі зміни умов середовища та можливість обговорення цих змін через вбудований месенджер.
Інтеграція з IoT: Система взаємодіє з IoT-пристроями через MQTT-брокер для автоматичного отримання даних про умови середовища. Конфігурація передбачає підключення до Wi-Fi та обробку даних із сенсорів для подальшого аналізу.

2.2 Опис розгортання
Серверна частина:
1.	Інсталяція залежностей: Виконано встановлення всіх необхідних залежностей через npm install.
2.	Налаштування середовища: Встановлено змінні середовища в .env файлі, включаючи підключення до бази даних MongoDB.
3.	Запуск сервера: Сервер запущено командою npm start. Для перевірки працездатності використовувалися запити до API через Postman.
4.	Перевірка функціональності:
o	Запити до API обробляються коректно.
o	Дані успішно зберігаються в MongoDB.
o	Система генерує та надсилає сповіщення про зміну умов середовища.
Інтеграція IoT:
1.	Підключення ESP32 до Wi-Fi: Налаштовано передачу даних на сервер через MQTT.
2.	Передача зібраних даних: Дані відправляються через HTTP POST-запити до API системи.
3.	Обробка отриманих даних: Сервер обробляє інформацію та зберігає її в базі даних для подальшого аналізу.
Використані інструменти та технології:
•	Node.js: Серверна частина.
•	MongoDB: Зберігання даних.
•	Postman: Тестування API.
•	MQTT: З’єднання IoT пристроїв із сервером.
•	Visual Studio Code: Розробка та налагодження коду.
•	GitHub: Керування версіями коду.

3 Висновок
Програмна система моніторингу умов робочого середовища корпоративних приміщень успішно розгорнута та протестована в локальному середовищі. Всі компоненти системи працюють коректно:
•	Система обробляє дані від IoT-пристроїв, таких як датчики температури, вологості та рівня CO₂.
•	Сповіщення про зміни умов середовища генеруються та надсилаються користувачам вчасно.
•	Дані зберігаються в базі даних MongoDB, що забезпечує їхню доступність для аналізу.

